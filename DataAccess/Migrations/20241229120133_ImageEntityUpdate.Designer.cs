// <auto-generated />
using System;
using DataAccess.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(EfDbContext))]
    [Migration("20241229120133_ImageEntityUpdate")]
    partial class ImageEntityUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("Core.Entities.Concrete.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            CategoryName = "Cpu",
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(3415),
                            Order = 1
                        },
                        new
                        {
                            Id = new Guid("e0d9b4be-578d-40b4-bf31-249f989d7f4c"),
                            CategoryName = "Gpu",
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(3540),
                            Order = 2
                        });
                });

            modelBuilder.Entity("Core.Entities.Concrete.Detail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PropValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PropertyId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PropertyId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c26e345-be82-4f3c-89a2-f6968e14bd82"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7078),
                            Order = 1,
                            ProductId = new Guid("47723ab1-c3f4-4df8-b782-9ab9f80d88f7"),
                            PropValue = "AMD",
                            PropertyId = new Guid("32bee61c-70c1-4351-b0b5-f015ddac97b5")
                        },
                        new
                        {
                            Id = new Guid("1db83f6d-9814-4b5c-b643-ba14a37cdf80"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7168),
                            Order = 2,
                            ProductId = new Guid("47723ab1-c3f4-4df8-b782-9ab9f80d88f7"),
                            PropValue = "Ryzen",
                            PropertyId = new Guid("2e9bd1bb-6000-4ec0-9bd5-cb4779c4f0b5")
                        },
                        new
                        {
                            Id = new Guid("a1fe8f9a-34a2-458c-904f-0002498a2dfc"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7171),
                            Order = 3,
                            ProductId = new Guid("47723ab1-c3f4-4df8-b782-9ab9f80d88f7"),
                            PropValue = "7000",
                            PropertyId = new Guid("f204d339-f7bc-4ac6-9a3b-8bc80de4e43f")
                        },
                        new
                        {
                            Id = new Guid("f3c70f85-435a-4ae5-927d-88ed47337c52"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7182),
                            Order = 4,
                            ProductId = new Guid("47723ab1-c3f4-4df8-b782-9ab9f80d88f7"),
                            PropValue = "16",
                            PropertyId = new Guid("e2e34c6c-ac30-4d22-9221-b2c371690d08")
                        },
                        new
                        {
                            Id = new Guid("9603d021-ea4f-46b0-aa94-92691362b923"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7185),
                            Order = 5,
                            ProductId = new Guid("47723ab1-c3f4-4df8-b782-9ab9f80d88f7"),
                            PropValue = "32",
                            PropertyId = new Guid("f833cbe3-6e7d-4b51-8d73-c148a5817b3c")
                        },
                        new
                        {
                            Id = new Guid("8efaf906-f784-4bfa-923c-d1b0b82b152c"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7187),
                            Order = 6,
                            ProductId = new Guid("47723ab1-c3f4-4df8-b782-9ab9f80d88f7"),
                            PropValue = "4.2 GHz",
                            PropertyId = new Guid("63ef79ce-c59c-433e-85c7-2b6a5a8921cd")
                        },
                        new
                        {
                            Id = new Guid("de4628c3-59a8-4e58-9d2a-76120dea1c0b"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7190),
                            Order = 7,
                            ProductId = new Guid("47723ab1-c3f4-4df8-b782-9ab9f80d88f7"),
                            PropValue = "5.7 GHz",
                            PropertyId = new Guid("d60bb0e8-148a-44b6-a8d6-90f47f7c7ae5")
                        },
                        new
                        {
                            Id = new Guid("cad804e3-7aa1-4c31-911f-ab32dba14b33"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7192),
                            Order = 8,
                            ProductId = new Guid("47723ab1-c3f4-4df8-b782-9ab9f80d88f7"),
                            PropValue = "AM5",
                            PropertyId = new Guid("9a1233d6-0973-46d9-b01c-d481bd9f0b8e")
                        },
                        new
                        {
                            Id = new Guid("24488c52-2123-49f8-81c4-3d0a54b378af"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7194),
                            Order = 9,
                            ProductId = new Guid("47723ab1-c3f4-4df8-b782-9ab9f80d88f7"),
                            PropValue = "AMD Radeon™ Graphics",
                            PropertyId = new Guid("f441f959-4312-4c7e-b43c-8c8258db5b8a")
                        },
                        new
                        {
                            Id = new Guid("7b1dd6f1-698d-495a-abf3-837873856ab6"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7198),
                            Order = 10,
                            ProductId = new Guid("47723ab1-c3f4-4df8-b782-9ab9f80d88f7"),
                            PropValue = "DDR5",
                            PropertyId = new Guid("1fd8ab0d-4167-473c-818e-cf39f1e195eb")
                        },
                        new
                        {
                            Id = new Guid("98f671db-3a06-48c9-8612-81c603d41512"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7200),
                            Order = 11,
                            ProductId = new Guid("47723ab1-c3f4-4df8-b782-9ab9f80d88f7"),
                            PropValue = "120W",
                            PropertyId = new Guid("73889493-1d1e-41e9-8b41-7b2dc7b4a571")
                        },
                        new
                        {
                            Id = new Guid("721fddb6-72a0-4ab7-b4f0-a5b2be57ec3b"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7203),
                            Order = 12,
                            ProductId = new Guid("47723ab1-c3f4-4df8-b782-9ab9f80d88f7"),
                            PropValue = "2023-02-28",
                            PropertyId = new Guid("2f225437-c030-4403-909b-558526e964af")
                        },
                        new
                        {
                            Id = new Guid("8b0e9601-48bd-477f-9c41-874bd46ae721"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7205),
                            Order = 13,
                            ProductId = new Guid("47723ab1-c3f4-4df8-b782-9ab9f80d88f7"),
                            PropValue = "16 MB",
                            PropertyId = new Guid("21bdd88a-e073-4302-bf50-d6f3967de6a7")
                        },
                        new
                        {
                            Id = new Guid("a406c347-1465-46de-8ac0-4e1ed33c97a0"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7216),
                            Order = 14,
                            ProductId = new Guid("47723ab1-c3f4-4df8-b782-9ab9f80d88f7"),
                            PropValue = "128 MB",
                            PropertyId = new Guid("530602ae-4447-4f4b-b165-34e5b6cf66df")
                        },
                        new
                        {
                            Id = new Guid("00b64594-2ae6-4471-acc1-b290bf0ce057"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7219),
                            Order = 1,
                            ProductId = new Guid("140e8fbc-3251-426c-8862-8817f183635f"),
                            PropValue = "AMD",
                            PropertyId = new Guid("32bee61c-70c1-4351-b0b5-f015ddac97b5")
                        },
                        new
                        {
                            Id = new Guid("3e42b82d-bf84-438b-b807-84fa73f3870b"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7221),
                            Order = 2,
                            ProductId = new Guid("140e8fbc-3251-426c-8862-8817f183635f"),
                            PropValue = "Ryzen",
                            PropertyId = new Guid("2e9bd1bb-6000-4ec0-9bd5-cb4779c4f0b5")
                        },
                        new
                        {
                            Id = new Guid("f9c80678-5e9f-4ce7-890e-09faf818f9b1"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7223),
                            Order = 3,
                            ProductId = new Guid("140e8fbc-3251-426c-8862-8817f183635f"),
                            PropValue = "7000",
                            PropertyId = new Guid("f204d339-f7bc-4ac6-9a3b-8bc80de4e43f")
                        },
                        new
                        {
                            Id = new Guid("fab71230-ba53-4142-9be4-0b2ec299c80d"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7227),
                            Order = 4,
                            ProductId = new Guid("140e8fbc-3251-426c-8862-8817f183635f"),
                            PropValue = "16",
                            PropertyId = new Guid("e2e34c6c-ac30-4d22-9221-b2c371690d08")
                        },
                        new
                        {
                            Id = new Guid("da36b634-b6c1-474d-b2b3-15ad09c1aa9f"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7229),
                            Order = 5,
                            ProductId = new Guid("140e8fbc-3251-426c-8862-8817f183635f"),
                            PropValue = "32",
                            PropertyId = new Guid("f833cbe3-6e7d-4b51-8d73-c148a5817b3c")
                        },
                        new
                        {
                            Id = new Guid("e2baf394-7914-4567-8524-db0d9a52e758"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7231),
                            Order = 6,
                            ProductId = new Guid("140e8fbc-3251-426c-8862-8817f183635f"),
                            PropValue = "4.5 GHz",
                            PropertyId = new Guid("63ef79ce-c59c-433e-85c7-2b6a5a8921cd")
                        },
                        new
                        {
                            Id = new Guid("8559c350-92fe-4865-8f2b-1b054e19bba1"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7234),
                            Order = 7,
                            ProductId = new Guid("140e8fbc-3251-426c-8862-8817f183635f"),
                            PropValue = "5.7 GHz",
                            PropertyId = new Guid("d60bb0e8-148a-44b6-a8d6-90f47f7c7ae5")
                        },
                        new
                        {
                            Id = new Guid("0d246709-e5e8-4315-9e2a-f157dc7f83c3"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7236),
                            Order = 8,
                            ProductId = new Guid("140e8fbc-3251-426c-8862-8817f183635f"),
                            PropValue = "AM5",
                            PropertyId = new Guid("9a1233d6-0973-46d9-b01c-d481bd9f0b8e")
                        },
                        new
                        {
                            Id = new Guid("bd1fa656-32d7-4984-9199-3bc1d0dd2b29"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7239),
                            Order = 9,
                            ProductId = new Guid("140e8fbc-3251-426c-8862-8817f183635f"),
                            PropValue = "AMD Radeon™ Graphics",
                            PropertyId = new Guid("f441f959-4312-4c7e-b43c-8c8258db5b8a")
                        },
                        new
                        {
                            Id = new Guid("6948e203-2a2f-4d65-b193-e5dc2d75fdf4"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7241),
                            Order = 10,
                            ProductId = new Guid("140e8fbc-3251-426c-8862-8817f183635f"),
                            PropValue = "DDR5",
                            PropertyId = new Guid("1fd8ab0d-4167-473c-818e-cf39f1e195eb")
                        },
                        new
                        {
                            Id = new Guid("c1f5c92b-6810-4df3-accd-7eade0b82979"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7243),
                            Order = 11,
                            ProductId = new Guid("140e8fbc-3251-426c-8862-8817f183635f"),
                            PropValue = "170W",
                            PropertyId = new Guid("73889493-1d1e-41e9-8b41-7b2dc7b4a571")
                        },
                        new
                        {
                            Id = new Guid("907d9027-5c6b-4a52-ae88-7c7438d7e260"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7247),
                            Order = 12,
                            ProductId = new Guid("140e8fbc-3251-426c-8862-8817f183635f"),
                            PropValue = "2022-09-27",
                            PropertyId = new Guid("2f225437-c030-4403-909b-558526e964af")
                        },
                        new
                        {
                            Id = new Guid("e1fdd10c-8bb8-408b-935e-4d0cf53c947b"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7249),
                            Order = 13,
                            ProductId = new Guid("140e8fbc-3251-426c-8862-8817f183635f"),
                            PropValue = "16 MB",
                            PropertyId = new Guid("21bdd88a-e073-4302-bf50-d6f3967de6a7")
                        },
                        new
                        {
                            Id = new Guid("ebdf186c-4c71-4a3c-b0d1-bf37e9f5f489"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(7252),
                            Order = 14,
                            ProductId = new Guid("140e8fbc-3251-426c-8862-8817f183635f"),
                            PropValue = "64 MB",
                            PropertyId = new Guid("530602ae-4447-4f4b-b165-34e5b6cf66df")
                        });
                });

            modelBuilder.Entity("Core.Entities.Concrete.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SoldQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("47723ab1-c3f4-4df8-b782-9ab9f80d88f7"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(5750),
                            Order = 1,
                            Price = 525.0,
                            ProductName = "AMD Ryzen™ 9 7950X3D",
                            SoldQuantity = 0,
                            Stock = 30
                        },
                        new
                        {
                            Id = new Guid("140e8fbc-3251-426c-8862-8817f183635f"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(5847),
                            Order = 2,
                            Price = 519.0,
                            ProductName = "AMD Ryzen™ 9 7950X",
                            SoldQuantity = 0,
                            Stock = 30
                        },
                        new
                        {
                            Id = new Guid("7405c3a9-84d5-4ac1-9a02-4be70ae54f91"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(5851),
                            Order = 3,
                            Price = 399.0,
                            ProductName = "AMD Ryzen™ 9 7900X3D",
                            SoldQuantity = 0,
                            Stock = 30
                        },
                        new
                        {
                            Id = new Guid("a1e74e47-77fb-4824-a680-279fac2c8847"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(5854),
                            Order = 4,
                            Price = 350.0,
                            ProductName = "AMD Ryzen™ 9 7900X",
                            SoldQuantity = 0,
                            Stock = 30
                        },
                        new
                        {
                            Id = new Guid("b5cea90f-9d99-4701-9f53-621d3e7e54d7"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(5869),
                            Order = 5,
                            Price = 369.0,
                            ProductName = "AMD Ryzen™ 9 7900",
                            SoldQuantity = 0,
                            Stock = 30
                        },
                        new
                        {
                            Id = new Guid("40938821-2213-4253-83d7-9f4bce90d315"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(5872),
                            Order = 6,
                            Price = 365.0,
                            ProductName = "AMD Ryzen™ 7 7800X3D",
                            SoldQuantity = 0,
                            Stock = 30
                        },
                        new
                        {
                            Id = new Guid("e3b5f8b3-eb43-4756-8752-1a35a970a504"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(5875),
                            Order = 7,
                            Price = 277.0,
                            ProductName = "AMD Ryzen™ 7 7700X",
                            SoldQuantity = 0,
                            Stock = 30
                        },
                        new
                        {
                            Id = new Guid("469d1414-a0ed-4276-af1e-5fada8d5f14c"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(5878),
                            Order = 8,
                            Price = 280.0,
                            ProductName = "AMD Ryzen™ 7 7700",
                            SoldQuantity = 0,
                            Stock = 30
                        },
                        new
                        {
                            Id = new Guid("f75d11ac-2431-40d7-9367-3eab0c043b09"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(5881),
                            Order = 9,
                            Price = 195.0,
                            ProductName = "AMD Ryzen™ 5 7600X",
                            SoldQuantity = 0,
                            Stock = 50
                        },
                        new
                        {
                            Id = new Guid("1bc8ef04-ecfb-46eb-95dd-c4b70dfc780c"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(5883),
                            Order = 10,
                            Price = 180.0,
                            ProductName = "AMD Ryzen™ 5 7600",
                            SoldQuantity = 0,
                            Stock = 50
                        },
                        new
                        {
                            Id = new Guid("ec5166c9-8c8d-4853-8399-9b19257c6e5b"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(6241),
                            Order = 11,
                            Price = 150.0,
                            ProductName = "AMD Ryzen™ 5 7500F",
                            SoldQuantity = 0,
                            Stock = 50
                        });
                });

            modelBuilder.Entity("Core.Entities.Concrete.Property", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PropName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("32bee61c-70c1-4351-b0b5-f015ddac97b5"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(4353),
                            Order = 1,
                            PropName = "Brand"
                        },
                        new
                        {
                            Id = new Guid("2e9bd1bb-6000-4ec0-9bd5-cb4779c4f0b5"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(4440),
                            Order = 2,
                            PropName = "Family"
                        },
                        new
                        {
                            Id = new Guid("f204d339-f7bc-4ac6-9a3b-8bc80de4e43f"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(4443),
                            Order = 3,
                            PropName = "Series"
                        },
                        new
                        {
                            Id = new Guid("e2e34c6c-ac30-4d22-9221-b2c371690d08"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(4455),
                            Order = 4,
                            PropName = "Core count"
                        },
                        new
                        {
                            Id = new Guid("f833cbe3-6e7d-4b51-8d73-c148a5817b3c"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(4457),
                            Order = 5,
                            PropName = "Thread count"
                        },
                        new
                        {
                            Id = new Guid("63ef79ce-c59c-433e-85c7-2b6a5a8921cd"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(4460),
                            Order = 6,
                            PropName = "Base clock speed"
                        },
                        new
                        {
                            Id = new Guid("d60bb0e8-148a-44b6-a8d6-90f47f7c7ae5"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(4462),
                            Order = 7,
                            PropName = "Max turbo frequency"
                        },
                        new
                        {
                            Id = new Guid("9a1233d6-0973-46d9-b01c-d481bd9f0b8e"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(4464),
                            Order = 8,
                            PropName = "Socket type"
                        },
                        new
                        {
                            Id = new Guid("f441f959-4312-4c7e-b43c-8c8258db5b8a"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(4475),
                            Order = 9,
                            PropName = "Integrated graphics"
                        },
                        new
                        {
                            Id = new Guid("1fd8ab0d-4167-473c-818e-cf39f1e195eb"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(4477),
                            Order = 10,
                            PropName = "Memory support"
                        },
                        new
                        {
                            Id = new Guid("73889493-1d1e-41e9-8b41-7b2dc7b4a571"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(4479),
                            Order = 11,
                            PropName = "Tdp"
                        },
                        new
                        {
                            Id = new Guid("2f225437-c030-4403-909b-558526e964af"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(4483),
                            Order = 12,
                            PropName = "Launch date"
                        },
                        new
                        {
                            Id = new Guid("c77f13b7-5c85-4de2-a07a-39bf8728c507"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(4485),
                            Order = 13,
                            PropName = "L1 cache"
                        },
                        new
                        {
                            Id = new Guid("21bdd88a-e073-4302-bf50-d6f3967de6a7"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(4487),
                            Order = 14,
                            PropName = "L2 cache"
                        },
                        new
                        {
                            Id = new Guid("530602ae-4447-4f4b-b165-34e5b6cf66df"),
                            CategoryId = new Guid("fa7f84ed-473e-47bb-b44c-369ff741df61"),
                            LastUpdate = new DateTime(2024, 12, 29, 12, 1, 32, 276, DateTimeKind.Utc).AddTicks(4489),
                            Order = 15,
                            PropName = "L3 cache"
                        });
                });

            modelBuilder.Entity("Core.Entities.Concrete.Detail", b =>
                {
                    b.HasOne("Core.Entities.Concrete.Product", "Product")
                        .WithMany("Details")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Concrete.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Image", b =>
                {
                    b.HasOne("Core.Entities.Concrete.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Product", b =>
                {
                    b.HasOne("Core.Entities.Concrete.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Property", b =>
                {
                    b.HasOne("Core.Entities.Concrete.Category", "Category")
                        .WithMany("Properties")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Category", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Core.Entities.Concrete.Product", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
